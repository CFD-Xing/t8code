name: "Upload newest documentation to website"

#description: "This action updates the documentation on the t8code website"

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  update_dev_doc:

    runs-on: ubuntu-latest
    
    timeout-minutes: 10
    steps:
#
# Setup and bootstrap
#
    - uses: actions/checkout@v1
    - name: Install zlib
      run: sudo apt-get install libz-dev
    - name: Install doxygen
      run: sudo apt-get install doxygen
    - name: init submodules
      run: git submodule init
    - name: update submodules
      run: git submodule update
    - name: bootstrap
      run: ./bootstrap

    # build config vars
    - name: build CFLAGS and CXXFLAGS variables
      run: echo CFLAGS_var="-Wall -pedantic -O3" >> $GITHUB_ENV
        && echo CXXFLAGS_var="-Wall -pedantic -O3" >> $GITHUB_ENV
    - name: build config variables
      run: export CONFIG_OPTIONS="--without-blas ${LESS_TEST_OPTION}"
           && export CONFIG_SERIAL_DEBUG="$CONFIG_OPTIONS --enable-debug --with-sc=$SC_SERIAL_DEBUG/install --with-p4est=$P4EST_SERIAL_DEBUG/install"
           && echo CONFIG_OPTIONS="$CONFIG_OPTIONS" >> $GITHUB_ENV
           && echo CONFIG_SERIAL_DEBUG="$CONFIG_SERIAL_DEBUG" >> $GITHUB_ENV
    - name: Check vars
      run: echo "[$CONFIG_SERIAL_DEBUG]"
# configure and generate doxygen
    - name: check debugging mode
      run: echo "Checking debug mode"
    - name: configure
      run: mkdir build_debug && cd build_debug && ../configure $CONFIG_DEBUG CFLAGS="$CFLAGS_var" CXXFLAGS="$CXXFLAGS_var"
    - name: make doxygen
      run: cd build_debug && make doxygen

# upload documentation
    - name: Checkout t8code-website repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        repository: DLR-AMR/t8code-website
        path: t8code-website
        token: ${{ secrets.T8DDY_TOKEN }}
    - name: Add documentation to website
      run: |
        cd t8code-website/content
        rm -rf doc/dev/*
        mkdir -p doc/dev
        cp -r ../../build_debug/doxygen/html/* doc/dev/
    - name: Commit and push files
      run: |
        cd t8code-website
        git config --local user.email "t8ddy.bot@gmail.com"
        git config --local user.name "t8ddy"
        git add content/doc/dev/
        git commit -m "Add newest documentation"
        git push --force-with-lease
 