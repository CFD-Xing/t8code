name: Tests

on:
  push:
    branches:
      - master
      - develop
      - feature-github_ci # for testing this script
      - feature-CI_link_sc_p4est # for testing this script
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-18.04
    
    steps:
# Setup and bootstrap
    - uses: actions/checkout@v1
    - name: Install mpich
      run: sudo apt-get update && sudo apt-get install libmpich-dev
    - name: init submodules
      run: git submodule init
    - name: update submodules
      run: git submodule update
    - name: bootstrap
      run: ./bootstrap
# install sc-debug and sc-non-debug
    - name: install sc
      run: echo "Install sc"
    - name: make folders
      run: mkdir sc/build_debug && mkdir sc/build_nondebug
    - name: create environment vars
      env:
              SC_DEBUG: $PWD/sc/build_debug
              SC_NONDEBUG: $PWD/sc/build_nondebug
    - name: configure debug
      run: cd sc/build_debug && ./configure --enable-mpi --enable-debug --prefix=$PWD/install
    - name: build debug
      run: make -j V=0 && make -j V=0 install
    - name: configure and build nondebug
      run: cd ../build_nondebug && ./configure --enable-mpi --enable-debug --prefix=$PWD/install
    - name: build nondebug
      run: make -j V=0 && make -j V=0 install
# install p4est-debug and p4est-non-debug
    - name: install p4est
      run: echo "Install p4est"
    - name: make folders
      run: mkdir p4est/build_debug && mkdir p4est/build_nondebug
    - name: create environment vars
      env:
              P4EST_DEBUG: $PWD/sc/build_debug
              P4EST_NONDEBUG: $PWD/sc/build_nondebug
    - name: configure debug
      run: cd p4est/build_debug && ./configure --enable-mpi --enable-debug --prefix=$PWD/install --with-sc=$SC_DEBUG
    - name: build debug
      run: make -j V=0 && make -j V=0 install
    - name: configure and build nondebug
      run: cd ../build_nondebug && ./configure --enable-mpi --prefix=$PWD/install --with-sc=$SC_NONDEBUG
    - name: build nondebug
      run: make -j V=0 && make -j V=0 install
# define helper variables
    - name: define variables
      env:
            CONFIG_OPTIONS: --without-blas
            CONFIG_DEBUG: $CONFIG_OPTIONS --enable-debug --with-sc=$SC_DEBUG --with-p4est=$P4EST_DEBUG
            CONFIG_RELEASE: $CONFIG_OPTIONS --with-sc=$SC_NONDEBUG --with-p4est=$P4EST_NONDEBUG
            CONFIG_MPI_DEBUG: $CONFIG_DEBUG --enable-mpi 
            CONFIG_MPI_RELEASE: $CONFIG_RELEASE --enable-mpi 
# configure and test with MPI (release mode)
    - name: check release mode
      run: echo "Checking release mode (MPI)"
    - name: change back to main dir
      run: cd ../../
    - name: configure
      run: ./configure $CONFIG_MPI_RELEASE
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
# configure and test with MPI (debug mode)
    - name: check debugging mode
      run: echo "Checking debug mode"
    - name: configure
      run: ./configure $CONFIG_MPI_DEBUG
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
# configure and test with MPI (C++ compiler only, release mode)
    - name: check C++ compiler
      run: echo "Checking C++, release mode (MPI)"
    - name: configure
      run: ./configure CC=mpicxx CXX=mpicxx $CONFIG_MPI_RELEASE
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
# configure and test serial (release mode)
    - name: check serial
      run: echo "Checking serial release mode"
    - name: configure
      run: ./configure $CONFIG_RELEASE
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
# configure and test serial (debug mode)
    - name: check serial
      run: echo "Checking debugging mode"
    - name: configure
      run: ./configure $CONFIG_DEBUG
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
# configure and test with MPI and netcdf
    - name: Install netcdf
      run: sudo apt-get install libnetcdf-dev
    - name: configure
      run: ./configure $CONFIG_MPI_RELEASE --with-netcdf
    - name: OnFailPrintLog
      if: failure()
      run: cat config.log
    - name: make
      run: make -j V=0
    - name: make check
      run: make check -j4 V=0
    - name: clean up
      run: make distclean
